name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: $ {{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: $ {{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os}}-node-${{ hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: use nodejs
        uses: actions/setup-node@v1
        with:
          node-version: "19.x"
      - run: npm ci
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: upload test coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: build project
        if: github.event_name == 'push'
        run: npm run build
      - name: upload build folder
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
        if: github.event_name == 'push'
      - name: ZIP assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: echo vars for testing
        run: |
          echo ${{github.event_name}}
          echo ${{github.ref }}
      - name: create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: deploy to staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain rabid-design.surge.sh --token ${{ secrets.SURGE_TOKEN }}
      - name: deploy to prod
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain warlike-level-prod.surge.sh --token ${{ secrets.SURGE_TOKEN }}
      - name: upload coverage reports
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN}}
